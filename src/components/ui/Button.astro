---
export interface Props {
  variant?: 'primary' | 'secondary' | 'danger' | 'ghost';
  size?: 'sm' | 'md' | 'lg';
  type?: 'button' | 'submit' | 'reset';
  disabled?: boolean;
  class?: string;
  href?: string;
  [key: string]: any;
}

const {
  variant = 'primary',
  size = 'md',
  type = 'button',
  disabled = false,
  class: className,
  href,
  ...rest
} = Astro.props;

// 基础样式
const baseStyles = 'inline-flex items-center justify-center font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed';

// 变体样式
const variantStyles = {
  primary: 'bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500',
  secondary: 'bg-gray-200 text-gray-900 hover:bg-gray-300 focus:ring-gray-500',
  danger: 'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500',
  ghost: 'bg-transparent text-gray-700 hover:bg-gray-100 focus:ring-gray-500',
};

// 尺寸样式
const sizeStyles = {
  sm: 'px-3 py-1.5 text-sm',
  md: 'px-4 py-2 text-base',
  lg: 'px-6 py-3 text-lg',
};

const combinedClasses = `${baseStyles} ${variantStyles[variant]} ${sizeStyles[size]} ${className || ''}`.trim();

// 如果提供了 href，渲染为链接
const Tag = href ? 'a' : 'button';
---

<Tag
  class={combinedClasses}
  type={href ? undefined : type}
  disabled={href ? undefined : disabled}
  href={href}
  {...rest}
>
  <slot />
</Tag>