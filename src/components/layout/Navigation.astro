---
interface Props {
    mobile?: boolean;
}

const { mobile = false } = Astro.props;

const navItems = [
    { href: '/analyze', label: '数据分析', icon: 'chart' },
    { href: '/favorites', label: '我的收藏', icon: 'star' },
    { href: '/history', label: '历史记录', icon: 'clock' },
    { href: '/profile', label: '个人资料', icon: 'user' }
];

const getIcon = (iconName: string) => {
    const icons = {
        chart: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>',
        star: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"/>',
        clock: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>',
        user: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>'
    };
    return icons[iconName as keyof typeof icons] || icons.chart;
};

const currentPath = Astro.url.pathname;
---

<nav class={mobile ? 'space-y-2' : 'flex items-center space-x-6'}>
    {navItems.map(item => {
        const isActive = currentPath === item.href || currentPath.startsWith(item.href + '/');
        const baseClasses = mobile 
            ? 'flex items-center space-x-3 px-3 py-2 rounded-md text-sm font-medium transition-colors'
            : 'flex items-center space-x-2 px-3 py-2 rounded-md text-sm font-medium transition-colors';
        
        const activeClasses = isActive
            ? 'bg-primary text-primary-content'
            : mobile 
                ? 'text-gray-300 hover:text-white hover:bg-gray-700/50'
                : 'text-gray-300 hover:text-white hover:bg-gray-700/50';
        
        return (
            <a 
                href={item.href}
                class={`${baseClasses} ${activeClasses}`}
                aria-current={isActive ? 'page' : undefined}
            >
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <Fragment set:html={getIcon(item.icon)} />
                </svg>
                <span>{item.label}</span>
            </a>
        );
    })}
</nav>