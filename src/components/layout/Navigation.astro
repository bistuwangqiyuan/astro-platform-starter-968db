---
export interface Props {
  currentPath: string;
  isMobile?: boolean;
}

const { currentPath, isMobile = false } = Astro.props;

// Reason: 定义导航菜单项
const navItems = [
  {
    href: '/',
    label: '首页',
    icon: 'M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6'
  },
  {
    href: '/analyze',
    label: '数据分析',
    icon: 'M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z'
  },
  {
    href: '/favorites',
    label: '收藏',
    icon: 'M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z'
  },
  {
    href: '/history',
    label: '历史',
    icon: 'M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z'
  }
];

// Reason: 检查当前路径是否匹配导航项
function isActive(href: string, currentPath: string): boolean {
  if (href === '/') {
    return currentPath === '/';
  }
  return currentPath.startsWith(href);
}

// Reason: 根据移动端或桌面端生成不同的样式类
const baseClass = isMobile 
  ? 'flex items-center space-x-3 px-3 py-2 rounded-md text-base font-medium transition-colors duration-200'
  : 'nav-link';

const activeClass = isMobile
  ? 'bg-blue-100 text-blue-700 dark:bg-blue-900 dark:text-blue-300'
  : 'nav-link-active';
---

{isMobile ? (
  <!-- 移动端导航 -->
  <div class="space-y-1">
    {navItems.map((item) => (
      <a 
        href={item.href}
        class={`${baseClass} ${isActive(item.href, currentPath) ? activeClass : 'text-gray-700 hover:text-gray-900 hover:bg-gray-100 dark:text-gray-300 dark:hover:text-gray-100 dark:hover:bg-gray-800'}`}
        aria-current={isActive(item.href, currentPath) ? 'page' : undefined}
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={item.icon}></path>
        </svg>
        <span>{item.label}</span>
      </a>
    ))}
  </div>
) : (
  <!-- 桌面端导航 -->
  <nav class="flex space-x-8" role="navigation" aria-label="主导航">
    {navItems.map((item) => (
      <a 
        href={item.href}
        class={`${baseClass} ${isActive(item.href, currentPath) ? activeClass : ''}`}
        aria-current={isActive(item.href, currentPath) ? 'page' : undefined}
        title={item.label}
      >
        <span class="flex items-center space-x-1">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={item.icon}></path>
          </svg>
          <span>{item.label}</span>
        </span>
      </a>
    ))}
  </nav>
)}

<style>
  /* Reason: 导航链接的悬停效果 */
  .nav-link {
    position: relative;
  }
  
  .nav-link::after {
    content: '';
    position: absolute;
    bottom: -8px;
    left: 50%;
    transform: translateX(-50%);
    width: 0;
    height: 2px;
    background-color: currentColor;
    transition: width 0.3s ease;
  }
  
  .nav-link:hover::after,
  .nav-link-active::after {
    width: 100%;
  }
  
  /* Reason: 移动端导航项的触摸友好设计 */
  @media (max-width: 768px) {
    a {
      min-height: 44px; /* 确保触摸目标足够大 */
    }
  }
</style>