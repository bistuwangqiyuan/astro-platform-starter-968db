---
import BaseLayout from '../layouts/BaseLayout.astro';
import Button from '../components/ui/Button.astro';

const title = '服务器错误';
const description = '服务器遇到了内部错误，请稍后重试';
---

<BaseLayout title={title} description={description}>
  <div class="min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full text-center space-y-8">
      <!-- 500 图标 -->
      <div class="animate-pulse">
        <div class="mx-auto h-32 w-32 text-red-400 dark:text-red-500">
          <svg fill="none" stroke="currentColor" viewBox="0 0 24 24" class="w-full h-full">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
          </svg>
        </div>
      </div>

      <!-- 错误信息 -->
      <div>
        <h1 class="text-6xl font-bold text-gray-900 dark:text-gray-100 mb-4">
          500
        </h1>
        <h2 class="text-3xl font-semibold text-gray-700 dark:text-gray-300 mb-4">
          服务器错误
        </h2>
        <p class="text-lg text-gray-600 dark:text-gray-400 mb-8">
          抱歉，服务器遇到了内部错误。我们的技术团队已收到通知，正在紧急修复中。
        </p>
      </div>

      <!-- 操作按钮 -->
      <div class="space-y-4">
        <Button 
          id="refresh-button" 
          variant="primary" 
          size="lg" 
          class="w-full"
        >
          重新加载页面
        </Button>
        <div class="flex gap-4">
          <Button href="/" variant="secondary" class="flex-1">
            返回首页
          </Button>
          <Button href="/api/health" target="_blank" variant="ghost" class="flex-1">
            检查状态
          </Button>
        </div>
      </div>

      <!-- 错误详情 -->
      <div class="mt-8 p-6 bg-red-50 dark:bg-red-900 rounded-lg border border-red-200 dark:border-red-700">
        <h3 class="text-lg font-medium text-red-800 dark:text-red-200 mb-3">
          错误详情
        </h3>
        <div class="text-sm text-red-700 dark:text-red-300 space-y-2">
          <p>
            <strong>时间:</strong> 
            <span id="error-time"></span>
          </p>
          <p>
            <strong>错误代码:</strong> 500 - Internal Server Error
          </p>
          <p>
            <strong>请求ID:</strong> 
            <span id="request-id"></span>
          </p>
        </div>
      </div>

      <!-- 联系支持 -->
      <div class="mt-8 p-6 bg-gray-50 dark:bg-gray-800 rounded-lg">
        <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100 mb-3">
          需要帮助？
        </h3>
        <p class="text-sm text-gray-600 dark:text-gray-400 mb-4">
          如果问题持续存在，请联系我们的技术支持团队
        </p>
        <div class="flex gap-4">
          <Button href="/contact" variant="secondary" class="flex-1">
            联系支持
          </Button>
          <Button href="mailto:support@example.com" variant="ghost" class="flex-1">
            发送邮件
          </Button>
        </div>
      </div>

      <!-- 状态更新 -->
      <div class="text-sm text-gray-500 dark:text-gray-400">
        您可以在我们的
        <a href="/status" class="text-blue-600 dark:text-blue-400 hover:underline">
          状态页面
        </a>
        查看系统运行状态
      </div>
    </div>
  </div>
</BaseLayout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Reason: 记录500错误页面访问日志
    console.error('[500] 服务器错误页面访问:', {
      timestamp: new Date().toISOString(),
      url: window.location.href,
      userAgent: navigator.userAgent
    });
    
    // Reason: 生成错误ID和时间
    const errorTime = document.getElementById('error-time');
    const requestId = document.getElementById('request-id');
    
    if (errorTime) {
      errorTime.textContent = new Date().toLocaleString('zh-CN');
    }
    
    if (requestId) {
      // 生成简单的请求ID
      const id = 'REQ-' + Math.random().toString(36).substr(2, 9).toUpperCase();
      requestId.textContent = id;
    }
    
    // Reason: 刷新页面功能
    const refreshButton = document.getElementById('refresh-button');
    if (refreshButton) {
      refreshButton.addEventListener('click', () => {
        console.log('[500] 用户请求刷新页面');
        window.location.reload();
      });
    }
    
    // Reason: 自动重试机制（可选）
    let retryCount = 0;
    const maxRetries = 3;
    
    function autoRetry() {
      if (retryCount < maxRetries) {
        retryCount++;
        console.log(`[500] 自动重试第 ${retryCount} 次`);
        
        setTimeout(() => {
          // 尝试检查服务器状态
          fetch('/api/health')
            .then(response => {
              if (response.ok) {
                console.log('[500] 服务器恢复正常，刷新页面');
                window.location.reload();
              } else {
                autoRetry();
              }
            })
            .catch(error => {
              console.error('[500] 健康检查失败:', error);
              autoRetry();
            });
        }, 5000 * retryCount); // 递增延迟
      } else {
        console.log('[500] 自动重试次数已达上限');
      }
    }
    
    // 30秒后开始自动重试
    setTimeout(autoRetry, 30000);
  });
</script>

<style>
  /* Reason: 500页面的特殊动画效果 */
  .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  
  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: .5;
    }
  }
  
  /* Reason: 页面淡入效果 */
  .min-h-screen > div {
    animation: fadeIn 0.6s ease-out;
  }
  
  /* Reason: 错误详情框的特殊样式 */
  .bg-red-50 {
    background-color: rgba(254, 242, 242, 0.8);
  }
  
  .dark .bg-red-900 {
    background-color: rgba(127, 29, 29, 0.3);
  }
  
  /* Reason: 悬停效果 */
  button:hover, a:hover {
    transform: translateY(-1px);
    transition: transform 0.2s ease;
  }
</style>