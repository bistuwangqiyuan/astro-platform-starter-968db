---
// AIKeyword 关键词分析页面
import BaseLayout from '@/layouts/BaseLayout.astro';
import Header from '@/components/layout/Header.astro';
import Footer from '@/components/layout/Footer.astro';
import Button from '@/components/ui/Button.astro';
import Input from '@/components/ui/Input.astro';

// 页面元数据
const title = '关键词分析 - AIKeyword';
const description = '使用AI技术深度分析关键词的搜索量、搜索意图、竞争度和相关关键词，获得精准的数据洞察。';

// 从URL参数获取初始关键词
const url = new URL(Astro.request.url);
const initialKeyword = url.searchParams.get('keyword') || '';
---

<BaseLayout title={title} description={description}>
    <Header slot="header" />

    <main class="min-h-screen bg-gray-50">
        <!-- 搜索区域 -->
        <section class="bg-white border-b border-gray-200">
            <div class="container py-8">
                <div class="max-w-4xl mx-auto">
                    <h1 class="text-2xl sm:text-3xl font-bold text-gray-900 mb-6">关键词分析</h1>

                    <!-- 搜索表单 -->
                    <form id="analysis-form" class="space-y-4">
                        <div class="flex flex-col lg:flex-row gap-4">
                            <!-- 关键词输入 -->
                            <div class="flex-1">
                                <Input
                                    type="search"
                                    placeholder="输入要分析的关键词..."
                                    icon="search"
                                    size="lg"
                                    id="keyword-input"
                                    defaultValue={initialKeyword}
                                    required
                                />
                            </div>

                            <!-- 分析选项 -->
                            <div class="flex flex-col sm:flex-row gap-4">
                                <select id="analysis-source" class="form-select lg:w-40" aria-label="选择数据源">
                                    <option value="google">Google</option>
                                    <option value="baidu">百度</option>
                                    <option value="all">全部来源</option>
                                </select>

                                <select id="analysis-region" class="form-select lg:w-40" aria-label="选择地区">
                                    <option value="CN">中国</option>
                                    <option value="US">美国</option>
                                    <option value="UK">英国</option>
                                    <option value="global">全球</option>
                                </select>

                                <Button type="submit" size="lg" className="whitespace-nowrap px-8" id="analyze-button">开始分析</Button>
                            </div>
                        </div>

                        <!-- 高级选项 -->
                        <details class="group">
                            <summary class="cursor-pointer text-sm text-gray-600 hover:text-gray-900 flex items-center">
                                <svg
                                    class="w-4 h-4 mr-2 transform group-open:rotate-90 transition-transform"
                                    fill="none"
                                    stroke="currentColor"
                                    viewBox="0 0 24 24"
                                >
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                                </svg>
                                高级选项
                            </summary>

                            <div class="mt-4 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 p-4 bg-gray-50 rounded-lg">
                                <div>
                                    <label class="form-label">时间范围</label>
                                    <select id="time-range" class="form-select">
                                        <option value="3months">最近3个月</option>
                                        <option value="6months">最近6个月</option>
                                        <option value="12months" selected>最近12个月</option>
                                        <option value="24months">最近24个月</option>
                                    </select>
                                </div>

                                <div>
                                    <label class="form-label">分析类型</label>
                                    <select id="analysis-type" class="form-select">
                                        <option value="detailed" selected>详细分析</option>
                                        <option value="simple">简单分析</option>
                                    </select>
                                </div>

                                <div>
                                    <label class="form-label flex items-center">
                                        <input type="checkbox" id="include-related" class="mr-2" checked />
                                        包含相关关键词
                                    </label>
                                </div>
                            </div>
                        </details>
                    </form>
                </div>
            </div>
        </section>

        <!-- 结果显示区域 -->
        <section class="container py-8">
            <div class="max-w-7xl mx-auto">
                <!-- 加载状态 -->
                <div id="loading-state" class="hidden">
                    <div class="text-center py-16">
                        <div class="inline-flex items-center justify-center w-16 h-16 bg-primary-100 rounded-full mb-4">
                            <svg class="animate-spin w-8 h-8 text-primary-600" fill="none" viewBox="0 0 24 24">
                                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                <path
                                    class="opacity-75"
                                    fill="currentColor"
                                    d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                            </svg>
                        </div>
                        <h3 class="text-lg font-semibold text-gray-900 mb-2">正在分析中...</h3>
                        <p class="text-gray-600">AI正在深度分析您的关键词，请稍候</p>
                        <div class="mt-4 max-w-md mx-auto">
                            <div class="bg-gray-200 rounded-full h-2">
                                <div id="progress-bar" class="bg-primary-600 h-2 rounded-full transition-all duration-300" style="width: 0%"></div>
                            </div>
                            <p class="text-sm text-gray-500 mt-2" id="progress-text">准备分析...</p>
                        </div>
                    </div>
                </div>

                <!-- 错误状态 -->
                <div id="error-state" class="hidden">
                    <div class="text-center py-16">
                        <div class="inline-flex items-center justify-center w-16 h-16 bg-error-100 rounded-full mb-4">
                            <svg class="w-8 h-8 text-error-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                                ></path>
                            </svg>
                        </div>
                        <h3 class="text-lg font-semibold text-gray-900 mb-2">分析失败</h3>
                        <p class="text-gray-600 mb-4" id="error-message">请检查关键词并重试</p>
                        <Button onclick="retryAnalysis()" variant="outline">重试分析</Button>
                    </div>
                </div>

                <!-- 空状态 -->
                <div id="empty-state" class="text-center py-16">
                    <div class="inline-flex items-center justify-center w-16 h-16 bg-gray-100 rounded-full mb-4">
                        <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                        </svg>
                    </div>
                    <h3 class="text-lg font-semibold text-gray-900 mb-2">开始分析关键词</h3>
                    <p class="text-gray-600">输入关键词并点击"开始分析"按钮获取深度洞察</p>
                </div>

                <!-- 分析结果 -->
                <div id="analysis-results" class="hidden space-y-8">
                    <!-- 关键词概览 -->
                    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                        <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-6">
                            <div>
                                <h2 class="text-xl font-semibold text-gray-900" id="result-keyword">关键词</h2>
                                <p class="text-sm text-gray-500 mt-1">分析时间：<span id="analysis-time">--</span></p>
                            </div>
                            <div class="mt-4 sm:mt-0 flex space-x-3">
                                <Button variant="outline" size="sm" onclick="saveToFavorites()">
                                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"
                                        ></path>
                                    </svg>
                                    收藏
                                </Button>
                                <Button variant="outline" size="sm" onclick="exportResults()">
                                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                                        ></path>
                                    </svg>
                                    导出
                                </Button>
                            </div>
                        </div>

                        <!-- 核心指标 -->
                        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
                            <div class="text-center p-4 bg-primary-50 rounded-lg">
                                <div class="text-2xl font-bold text-primary-600" id="search-volume">--</div>
                                <div class="text-sm text-gray-600">月搜索量</div>
                            </div>
                            <div class="text-center p-4 bg-accent-50 rounded-lg">
                                <div class="text-2xl font-bold text-accent-600" id="competition-score">--</div>
                                <div class="text-sm text-gray-600">竞争度</div>
                            </div>
                            <div class="text-center p-4 bg-warning-50 rounded-lg">
                                <div class="text-2xl font-bold text-warning-600" id="trend-direction">--</div>
                                <div class="text-sm text-gray-600">趋势方向</div>
                            </div>
                            <div class="text-center p-4 bg-purple-50 rounded-lg">
                                <div class="text-2xl font-bold text-purple-600" id="confidence-score">--</div>
                                <div class="text-sm text-gray-600">置信度</div>
                            </div>
                        </div>
                    </div>

                    <!-- 搜索意图分析 -->
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                            <h3 class="text-lg font-semibold text-gray-900 mb-4">搜索意图分析</h3>
                            <div class="space-y-4" id="search-intent-chart">
                                <!-- 意图图表将在这里渲染 -->
                            </div>
                        </div>

                        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                            <h3 class="text-lg font-semibold text-gray-900 mb-4">搜索趋势</h3>
                            <div class="h-64 flex items-center justify-center bg-gray-50 rounded" id="trend-chart">
                                <p class="text-gray-500">趋势图表</p>
                            </div>
                        </div>
                    </div>

                    <!-- 相关关键词 -->
                    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                        <h3 class="text-lg font-semibold text-gray-900 mb-4">相关关键词推荐</h3>
                        <div id="related-keywords" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                            <!-- 相关关键词将在这里显示 -->
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>

    <Footer slot="footer" />
</BaseLayout>

<script>
    // 分析页面功能
    document.addEventListener('DOMContentLoaded', () => {
        window.logKeyStep('关键词分析页面加载完成');

        // 初始化页面
        initializeAnalyzePage();

        // 如果有初始关键词，自动开始分析
        const initialKeyword = (document.getElementById('keyword-input') as HTMLInputElement)?.value;
        if (initialKeyword) {
            setTimeout(() => {
                performAnalysis(initialKeyword);
            }, 1000);
        }
    });

    // 初始化分析页面
    function initializeAnalyzePage() {
        const form = document.getElementById('analysis-form');
        const keywordInput = document.getElementById('keyword-input') as HTMLInputElement;

        if (form) {
            form.addEventListener('submit', (event) => {
                event.preventDefault();

                const keyword = keywordInput.value.trim();
                if (keyword) {
                    performAnalysis(keyword);
                } else {
                    if (window.utils) {
                        window.utils.showToast('请输入要分析的关键词', 'warning');
                    }
                }
            });
        }

        // 实时搜索建议
        if (keywordInput) {
            let suggestTimeout: NodeJS.Timeout;

            keywordInput.addEventListener('input', () => {
                clearTimeout(suggestTimeout);
                const query = keywordInput.value.trim();

                if (query.length >= 2) {
                    suggestTimeout = setTimeout(() => {
                        // TODO: 实现搜索建议
                        console.log('搜索建议:', query);
                    }, 300);
                }
            });
        }
    }

    // 执行关键词分析
    async function performAnalysis(keyword: string) {
        try {
            window.logKeyStep('开始关键词分析', { keyword });

            // 显示加载状态
            showLoadingState();

            // 获取分析选项
            const options = getAnalysisOptions();

            // 模拟分析过程
            await simulateAnalysis(keyword, options);

            // 显示结果
            showAnalysisResults(keyword);
        } catch (error) {
            console.error('分析失败:', error);
            showErrorState('分析过程中发生错误，请重试');
        }
    }

    // 获取分析选项
    function getAnalysisOptions() {
        const source = (document.getElementById('analysis-source') as HTMLSelectElement).value;
        const region = (document.getElementById('analysis-region') as HTMLSelectElement).value;
        const timeRange = (document.getElementById('time-range') as HTMLSelectElement).value;
        const analysisType = (document.getElementById('analysis-type') as HTMLSelectElement).value;
        const includeRelated = (document.getElementById('include-related') as HTMLInputElement).checked;

        return {
            sources: source === 'all' ? ['google', 'baidu'] : [source],
            region,
            timeRange,
            analysisType,
            includeRelated
        };
    }

    // 显示加载状态
    function showLoadingState() {
        hideAllStates();
        document.getElementById('loading-state')?.classList.remove('hidden');

        // 进度条动画
        animateProgress();
    }

    // 进度条动画
    function animateProgress() {
        const progressBar = document.getElementById('progress-bar');
        const progressText = document.getElementById('progress-text');

        const steps = [
            { progress: 20, text: '连接AI分析引擎...' },
            { progress: 40, text: '获取搜索数据...' },
            { progress: 60, text: '分析搜索意图...' },
            { progress: 80, text: '计算竞争度...' },
            { progress: 100, text: '分析完成！' }
        ];

        let currentStep = 0;

        const updateProgress = () => {
            if (currentStep < steps.length) {
                const step = steps[currentStep];

                if (progressBar) {
                    progressBar.style.width = `${step.progress}%`;
                }

                if (progressText) {
                    progressText.textContent = step.text;
                }

                currentStep++;
                setTimeout(updateProgress, 800);
            }
        };

        updateProgress();
    }

    // 模拟分析过程
    async function simulateAnalysis(keyword: string, options: any) {
        // 模拟API调用延迟
        await new Promise((resolve) => setTimeout(resolve, 4000));

        // 模拟生成分析结果
        const mockResults = generateMockResults(keyword);

        window.logKeyStep('关键词分析完成', { keyword, options, results: mockResults });

        return mockResults;
    }

    // 生成模拟结果
    function generateMockResults(keyword: string) {
        return {
            keyword,
            searchVolume: {
                monthly: Math.floor(Math.random() * 100000) + 1000,
                trend: Array.from({ length: 12 }, () => Math.floor(Math.random() * 50000) + 5000),
                growth: Math.random() > 0.5 ? '+' : '-' + (Math.random() * 20).toFixed(1) + '%'
            },
            searchIntent: {
                informational: Math.floor(Math.random() * 40) + 30,
                navigational: Math.floor(Math.random() * 20) + 5,
                transactional: Math.floor(Math.random() * 30) + 10,
                commercial: Math.floor(Math.random() * 25) + 10
            },
            competition: {
                level: ['low', 'medium', 'high'][Math.floor(Math.random() * 3)],
                score: Math.floor(Math.random() * 100),
                difficulty: ['容易', '中等', '困难'][Math.floor(Math.random() * 3)]
            },
            relatedKeywords: [`${keyword}技术`, `${keyword}应用`, `${keyword}发展`, `${keyword}趋势`, `${keyword}分析`, `${keyword}研究`],
            confidence: (Math.random() * 0.2 + 0.8).toFixed(2)
        };
    }

    // 显示分析结果
    function showAnalysisResults(keyword: string) {
        hideAllStates();
        document.getElementById('analysis-results')?.classList.remove('hidden');

        // 更新结果数据
        const mockData = generateMockResults(keyword);
        updateResultsDisplay(mockData);
    }

    // 更新结果显示
    function updateResultsDisplay(data: any) {
        // 更新关键词信息
        const keywordElement = document.getElementById('result-keyword');
        if (keywordElement) {
            keywordElement.textContent = data.keyword;
        }

        const timeElement = document.getElementById('analysis-time');
        if (timeElement) {
            timeElement.textContent = new Date().toLocaleString('zh-CN');
        }

        // 更新核心指标
        updateElement('search-volume', data.searchVolume.monthly.toLocaleString());
        updateElement('competition-score', data.competition.score + '/100');
        updateElement('trend-direction', data.searchVolume.growth);
        updateElement('confidence-score', (parseFloat(data.confidence) * 100).toFixed(0) + '%');

        // 更新搜索意图图表
        updateSearchIntentChart(data.searchIntent);

        // 更新相关关键词
        updateRelatedKeywords(data.relatedKeywords);
    }

    // 更新元素内容
    function updateElement(id: string, content: string) {
        const element = document.getElementById(id);
        if (element) {
            element.textContent = content;
        }
    }

    // 更新搜索意图图表
    function updateSearchIntentChart(intentData: any) {
        const container = document.getElementById('search-intent-chart');
        if (!container) return;

        const intents = [
            { name: '信息型', value: intentData.informational, color: 'bg-blue-500' },
            { name: '导航型', value: intentData.navigational, color: 'bg-green-500' },
            { name: '交易型', value: intentData.transactional, color: 'bg-yellow-500' },
            { name: '商业型', value: intentData.commercial, color: 'bg-purple-500' }
        ];

        container.innerHTML = intents
            .map(
                (intent) => `
      <div class="flex items-center justify-between">
        <div class="flex items-center space-x-3">
          <div class="w-3 h-3 rounded-full ${intent.color}"></div>
          <span class="text-sm text-gray-700">${intent.name}</span>
        </div>
        <div class="flex items-center space-x-3">
          <div class="w-24 bg-gray-200 rounded-full h-2">
            <div class="${intent.color} h-2 rounded-full" style="width: ${intent.value}%"></div>
          </div>
          <span class="text-sm font-medium text-gray-900 w-12">${intent.value}%</span>
        </div>
      </div>
    `
            )
            .join('');
    }

    // 更新相关关键词
    function updateRelatedKeywords(keywords: string[]) {
        const container = document.getElementById('related-keywords');
        if (!container) return;

        container.innerHTML = keywords
            .map(
                (keyword) => `
      <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors cursor-pointer"
           onclick="analyzeRelatedKeyword('${keyword}')">
        <span class="text-sm text-gray-700">${keyword}</span>
        <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </div>
    `
            )
            .join('');
    }

    // 显示错误状态
    function showErrorState(message: string) {
        hideAllStates();
        document.getElementById('error-state')?.classList.remove('hidden');

        const errorMessage = document.getElementById('error-message');
        if (errorMessage) {
            errorMessage.textContent = message;
        }
    }

    // 隐藏所有状态
    function hideAllStates() {
        ['loading-state', 'error-state', 'empty-state', 'analysis-results'].forEach((id) => {
            document.getElementById(id)?.classList.add('hidden');
        });
    }

    // 重试分析
    function retryAnalysis() {
        const keywordInput = document.getElementById('keyword-input') as HTMLInputElement;
        const keyword = keywordInput.value.trim();

        if (keyword) {
            performAnalysis(keyword);
        }
    }

    // 分析相关关键词
    function analyzeRelatedKeyword(keyword: string) {
        const keywordInput = document.getElementById('keyword-input') as HTMLInputElement;
        keywordInput.value = keyword;
        performAnalysis(keyword);

        window.logKeyStep('分析相关关键词', { keyword });
    }

    // 保存到收藏
    function saveToFavorites() {
        const keyword = document.getElementById('result-keyword')?.textContent;
        if (keyword) {
            // TODO: 实现保存到收藏功能
            if (window.utils) {
                window.utils.showToast('已保存到收藏夹', 'success');
            }
            window.logKeyStep('保存到收藏', { keyword });
        }
    }

    // 导出结果
    function exportResults() {
        const keyword = document.getElementById('result-keyword')?.textContent;
        if (keyword) {
            // TODO: 实现导出功能
            if (window.utils) {
                window.utils.showToast('导出功能正在开发中', 'info');
            }
            window.logKeyStep('导出分析结果', { keyword });
        }
    }

    // 全局函数声明
    (window as any).retryAnalysis = retryAnalysis;
    (window as any).analyzeRelatedKeyword = analyzeRelatedKeyword;
    (window as any).saveToFavorites = saveToFavorites;
    (window as any).exportResults = exportResults;
</script>

<style>
    /* 分析页面特殊样式 */
    details[open] summary {
        margin-bottom: 1rem;
    }

    /* 进度条动画 */
    #progress-bar {
        transition: width 0.3s ease-in-out;
    }

    /* 结果卡片悬停效果 */
    .bg-white.rounded-lg {
        transition: all 0.2s ease;
    }

    .bg-white.rounded-lg:hover {
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    /* 相关关键词悬停效果 */
    #related-keywords > div:hover {
        transform: translateX(4px);
    }

    /* 加载动画 */
    .animate-spin {
        animation: spin 1s linear infinite;
    }

    @keyframes spin {
        from {
            transform: rotate(0deg);
        }
        to {
            transform: rotate(360deg);
        }
    }

    /* 意图图表动画 */
    #search-intent-chart .bg-blue-500,
    #search-intent-chart .bg-green-500,
    #search-intent-chart .bg-yellow-500,
    #search-intent-chart .bg-purple-500 {
        transition: width 1s ease-in-out;
    }
</style>
