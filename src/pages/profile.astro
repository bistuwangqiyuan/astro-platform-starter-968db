---
// 个人中心页面 - AIKeyword项目
import BaseLayout from '@/layouts/BaseLayout.astro';
import Header from '@/components/layout/Header.astro';
import Footer from '@/components/layout/Footer.astro';
import Button from '@/components/ui/Button.astro';
import Input from '@/components/ui/Input.astro';

const title = '个人中心 - AIKeyword';
const description = '管理您的个人信息、使用统计和偏好设置。';
---

<BaseLayout title={title} description={description}>
    <Header slot="header" />

    <main class="min-h-screen bg-gray-50">
        <!-- 页面标题 -->
        <section class="bg-white border-b border-gray-200">
            <div class="container py-8">
                <h1 class="text-2xl sm:text-3xl font-bold text-gray-900">个人中心</h1>
                <p class="mt-2 text-gray-600">管理您的账户信息和使用统计</p>
            </div>
        </section>

        <div class="container py-8">
            <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
                <!-- 左侧导航 -->
                <div class="lg:col-span-1">
                    <nav class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
                        <div class="p-4 border-b border-gray-200">
                            <h2 class="font-medium text-gray-900">设置导航</h2>
                        </div>
                        <div class="divide-y divide-gray-200">
                            <button
                                class="profile-nav-item w-full px-4 py-3 text-left hover:bg-gray-50 focus:bg-primary-50 focus:text-primary-600"
                                data-tab="profile"
                            >
                                <div class="flex items-center">
                                    <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                    </svg>
                                    个人信息
                                </div>
                            </button>
                            <button
                                class="profile-nav-item w-full px-4 py-3 text-left hover:bg-gray-50 focus:bg-primary-50 focus:text-primary-600"
                                data-tab="stats"
                            >
                                <div class="flex items-center">
                                    <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"
                                        ></path>
                                    </svg>
                                    使用统计
                                </div>
                            </button>
                            <button
                                class="profile-nav-item w-full px-4 py-3 text-left hover:bg-gray-50 focus:bg-primary-50 focus:text-primary-600"
                                data-tab="preferences"
                            >
                                <div class="flex items-center">
                                    <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"
                                        ></path>
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                    </svg>
                                    偏好设置
                                </div>
                            </button>
                            <button
                                class="profile-nav-item w-full px-4 py-3 text-left hover:bg-gray-50 focus:bg-primary-50 focus:text-primary-600"
                                data-tab="security"
                            >
                                <div class="flex items-center">
                                    <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                                    </svg>
                                    账户安全
                                </div>
                            </button>
                        </div>
                    </nav>
                </div>

                <!-- 右侧内容 -->
                <div class="lg:col-span-3">
                    <!-- 加载状态 -->
                    <div id="loading-content" class="bg-white rounded-lg shadow-sm border border-gray-200 p-8 text-center">
                        <div class="inline-flex items-center justify-center w-12 h-12 bg-primary-100 rounded-full mb-4">
                            <svg class="animate-spin w-6 h-6 text-primary-600" fill="none" viewBox="0 0 24 24">
                                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                <path
                                    class="opacity-75"
                                    fill="currentColor"
                                    d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                            </svg>
                        </div>
                        <p class="text-gray-600">正在加载用户信息...</p>
                    </div>

                    <!-- 个人信息标签页 -->
                    <div id="profile-tab" class="profile-tab hidden">
                        <div class="bg-white rounded-lg shadow-sm border border-gray-200">
                            <div class="px-6 py-4 border-b border-gray-200">
                                <h3 class="text-lg font-medium text-gray-900">个人信息</h3>
                                <p class="text-sm text-gray-600">管理您的基本信息</p>
                            </div>
                            <div class="p-6">
                                <form id="profile-form" class="space-y-6">
                                    <!-- 头像 -->
                                    <div class="flex items-center space-x-6">
                                        <div class="flex-shrink-0">
                                            <div class="w-20 h-20 bg-primary-100 rounded-full flex items-center justify-center">
                                                <svg class="w-10 h-10 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path
                                                        stroke-linecap="round"
                                                        stroke-linejoin="round"
                                                        stroke-width="2"
                                                        d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                                </svg>
                                            </div>
                                        </div>
                                        <div>
                                            <h4 class="text-sm font-medium text-gray-900">头像</h4>
                                            <p class="text-sm text-gray-600">暂时使用默认头像</p>
                                        </div>
                                    </div>

                                    <!-- 用户名 -->
                                    <div>
                                        <label class="form-label">用户名</label>
                                        <Input type="text" id="display-name" placeholder="请输入用户名" className="w-full" />
                                    </div>

                                    <!-- 邮箱 -->
                                    <div>
                                        <label class="form-label">邮箱地址</label>
                                        <Input type="email" id="email" readonly className="w-full bg-gray-50" />
                                        <p class="text-xs text-gray-500 mt-1">邮箱地址不可修改</p>
                                    </div>

                                    <!-- 注册时间 -->
                                    <div>
                                        <label class="form-label">注册时间</label>
                                        <Input type="text" id="created-at" readonly className="w-full bg-gray-50" />
                                    </div>

                                    <!-- 最后登录 -->
                                    <div>
                                        <label class="form-label">最后登录</label>
                                        <Input type="text" id="last-login" readonly className="w-full bg-gray-50" />
                                    </div>

                                    <div class="flex space-x-4">
                                        <Button type="submit" variant="primary" id="save-profile">保存更改</Button>
                                        <Button type="button" variant="outline" id="cancel-profile">取消</Button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>

                    <!-- 使用统计标签页 -->
                    <div id="stats-tab" class="profile-tab hidden">
                        <div class="space-y-6">
                            <!-- 统计卡片 -->
                            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                                <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                                    <div class="flex items-center">
                                        <div class="flex-shrink-0">
                                            <div class="w-8 h-8 bg-primary-100 rounded-lg flex items-center justify-center">
                                                <svg class="w-5 h-5 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path
                                                        stroke-linecap="round"
                                                        stroke-linejoin="round"
                                                        stroke-width="2"
                                                        d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                                                </svg>
                                            </div>
                                        </div>
                                        <div class="ml-4">
                                            <p class="text-sm font-medium text-gray-600">总分析次数</p>
                                            <p class="text-2xl font-semibold text-gray-900" id="total-analyses">0</p>
                                        </div>
                                    </div>
                                </div>

                                <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                                    <div class="flex items-center">
                                        <div class="flex-shrink-0">
                                            <div class="w-8 h-8 bg-accent-100 rounded-lg flex items-center justify-center">
                                                <svg class="w-5 h-5 text-accent-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path
                                                        stroke-linecap="round"
                                                        stroke-linejoin="round"
                                                        stroke-width="2"
                                                        d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"
                                                    ></path>
                                                </svg>
                                            </div>
                                        </div>
                                        <div class="ml-4">
                                            <p class="text-sm font-medium text-gray-600">收藏数量</p>
                                            <p class="text-2xl font-semibold text-gray-900" id="total-favorites">0</p>
                                        </div>
                                    </div>
                                </div>

                                <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                                    <div class="flex items-center">
                                        <div class="flex-shrink-0">
                                            <div class="w-8 h-8 bg-warning-100 rounded-lg flex items-center justify-center">
                                                <svg class="w-5 h-5 text-warning-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path
                                                        stroke-linecap="round"
                                                        stroke-linejoin="round"
                                                        stroke-width="2"
                                                        d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                                </svg>
                                            </div>
                                        </div>
                                        <div class="ml-4">
                                            <p class="text-sm font-medium text-gray-600">本月分析</p>
                                            <p class="text-2xl font-semibold text-gray-900" id="monthly-analyses">0</p>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- 最近活动 -->
                            <div class="bg-white rounded-lg shadow-sm border border-gray-200">
                                <div class="px-6 py-4 border-b border-gray-200">
                                    <h3 class="text-lg font-medium text-gray-900">最近活动</h3>
                                </div>
                                <div class="p-6">
                                    <div id="recent-activities" class="space-y-4">
                                        <!-- 活动列表将通过JavaScript填充 -->
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- 偏好设置标签页 -->
                    <div id="preferences-tab" class="profile-tab hidden">
                        <div class="bg-white rounded-lg shadow-sm border border-gray-200">
                            <div class="px-6 py-4 border-b border-gray-200">
                                <h3 class="text-lg font-medium text-gray-900">偏好设置</h3>
                                <p class="text-sm text-gray-600">自定义您的使用体验</p>
                            </div>
                            <div class="p-6">
                                <form id="preferences-form" class="space-y-6">
                                    <!-- 语言设置 -->
                                    <div>
                                        <label class="form-label">语言</label>
                                        <select id="language" class="form-select w-full">
                                            <option value="zh-CN">简体中文</option>
                                            <option value="en-US">English</option>
                                        </select>
                                    </div>

                                    <!-- 主题设置 -->
                                    <div>
                                        <label class="form-label">主题</label>
                                        <select id="theme" class="form-select w-full">
                                            <option value="light">浅色主题</option>
                                            <option value="dark">深色主题</option>
                                            <option value="auto">跟随系统</option>
                                        </select>
                                    </div>

                                    <!-- 默认分析模式 -->
                                    <div>
                                        <label class="form-label">默认分析模式</label>
                                        <select id="default-analysis-mode" class="form-select w-full">
                                            <option value="detailed">详细分析</option>
                                            <option value="simple">简单分析</option>
                                        </select>
                                    </div>

                                    <!-- 数据展示偏好 -->
                                    <div>
                                        <label class="form-label">数据展示偏好</label>
                                        <div class="space-y-3">
                                            <label class="flex items-center">
                                                <input type="checkbox" id="show-trends" class="mr-2 h-4 w-4 text-primary-600 border-gray-300 rounded" />
                                                <span class="text-sm text-gray-700">显示趋势图表</span>
                                            </label>
                                            <label class="flex items-center">
                                                <input type="checkbox" id="show-related" class="mr-2 h-4 w-4 text-primary-600 border-gray-300 rounded" />
                                                <span class="text-sm text-gray-700">显示相关关键词</span>
                                            </label>
                                            <label class="flex items-center">
                                                <input type="checkbox" id="auto-save" class="mr-2 h-4 w-4 text-primary-600 border-gray-300 rounded" />
                                                <span class="text-sm text-gray-700">自动保存分析结果</span>
                                            </label>
                                        </div>
                                    </div>

                                    <div class="flex space-x-4">
                                        <Button type="submit" variant="primary" id="save-preferences">保存设置</Button>
                                        <Button type="button" variant="outline" id="reset-preferences">重置为默认</Button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>

                    <!-- 账户安全标签页 -->
                    <div id="security-tab" class="profile-tab hidden">
                        <div class="space-y-6">
                            <!-- 密码修改 -->
                            <div class="bg-white rounded-lg shadow-sm border border-gray-200">
                                <div class="px-6 py-4 border-b border-gray-200">
                                    <h3 class="text-lg font-medium text-gray-900">修改密码</h3>
                                    <p class="text-sm text-gray-600">定期更新密码以保护账户安全</p>
                                </div>
                                <div class="p-6">
                                    <form id="password-form" class="space-y-6">
                                        <div>
                                            <label class="form-label">当前密码</label>
                                            <Input type="password" id="current-password" placeholder="请输入当前密码" required className="w-full" />
                                        </div>

                                        <div>
                                            <label class="form-label">新密码</label>
                                            <Input type="password" id="new-password" placeholder="请输入新密码（至少6位）" required className="w-full" />
                                        </div>

                                        <div>
                                            <label class="form-label">确认新密码</label>
                                            <Input type="password" id="confirm-password" placeholder="请再次输入新密码" required className="w-full" />
                                        </div>

                                        <Button type="submit" variant="primary" id="change-password">修改密码</Button>
                                    </form>
                                </div>
                            </div>

                            <!-- 登录日志 -->
                            <div class="bg-white rounded-lg shadow-sm border border-gray-200">
                                <div class="px-6 py-4 border-b border-gray-200">
                                    <h3 class="text-lg font-medium text-gray-900">登录记录</h3>
                                    <p class="text-sm text-gray-600">查看最近的登录活动</p>
                                </div>
                                <div class="p-6">
                                    <div class="space-y-4">
                                        <div class="flex items-center justify-between py-3 border-b border-gray-100">
                                            <div>
                                                <p class="text-sm font-medium text-gray-900">当前会话</p>
                                                <p class="text-xs text-gray-500">正在使用中</p>
                                            </div>
                                            <div class="text-right">
                                                <p class="text-sm text-gray-900" id="current-session-time">--</p>
                                                <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-accent-100 text-accent-800">
                                                    活跃
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- 账户注销 -->
                            <div class="bg-white rounded-lg shadow-sm border border-error-200">
                                <div class="px-6 py-4 border-b border-error-200">
                                    <h3 class="text-lg font-medium text-error-900">危险操作</h3>
                                    <p class="text-sm text-error-600">请谨慎执行以下操作</p>
                                </div>
                                <div class="p-6">
                                    <div class="flex items-center justify-between">
                                        <div>
                                            <h4 class="text-sm font-medium text-gray-900">账户注销</h4>
                                            <p class="text-sm text-gray-600">永久删除您的账户和所有数据，此操作不可恢复</p>
                                        </div>
                                        <Button variant="outline" className="text-error-600 border-error-300 hover:bg-error-50" id="delete-account">
                                            注销账户
                                        </Button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <Footer slot="footer" />
</BaseLayout>

<script>
    // 个人中心页面功能
    document.addEventListener('DOMContentLoaded', () => {
        window.logKeyStep('个人中心页面加载完成');
        initializeProfilePage();
    });

    // 全局状态
    let currentUser: any = null;
    let userStats: any = null;

    function initializeProfilePage() {
        // 检查登录状态
        checkAuthAndLoad();

        // 绑定导航事件
        bindNavigation();

        // 绑定表单事件
        bindForms();

        window.logKeyStep('个人中心页面初始化完成');
    }

    function bindNavigation() {
        const navItems = document.querySelectorAll('.profile-nav-item');

        navItems.forEach((item) => {
            item.addEventListener('click', () => {
                const tabName = item.getAttribute('data-tab');
                if (tabName) {
                    switchTab(tabName);

                    // 更新导航状态
                    navItems.forEach((nav) => nav.classList.remove('bg-primary-50', 'text-primary-600'));
                    item.classList.add('bg-primary-50', 'text-primary-600');
                }
            });
        });
    }

    function bindForms() {
        // 个人信息表单
        const profileForm = document.getElementById('profile-form');
        profileForm?.addEventListener('submit', (e) => {
            e.preventDefault();
            saveProfile();
        });

        // 偏好设置表单
        const preferencesForm = document.getElementById('preferences-form');
        preferencesForm?.addEventListener('submit', (e) => {
            e.preventDefault();
            savePreferences();
        });

        // 密码修改表单
        const passwordForm = document.getElementById('password-form');
        passwordForm?.addEventListener('submit', (e) => {
            e.preventDefault();
            changePassword();
        });

        // 重置偏好设置
        const resetButton = document.getElementById('reset-preferences');
        resetButton?.addEventListener('click', () => {
            resetPreferences();
        });

        // 账户注销
        const deleteButton = document.getElementById('delete-account');
        deleteButton?.addEventListener('click', () => {
            deleteAccount();
        });
    }

    async function checkAuthAndLoad() {
        try {
            const response = await fetch('/api/auth/me', {
                method: 'GET',
                credentials: 'include'
            });

            if (response.ok) {
                const result = await response.json();
                if (result.success && result.user) {
                    currentUser = result.user;

                    // 加载用户数据
                    await loadUserData();

                    // 显示第一个标签页
                    switchTab('profile');
                    document.querySelector('[data-tab="profile"]')?.classList.add('bg-primary-50', 'text-primary-600');
                } else {
                    // 用户未登录，跳转到登录页
                    window.location.href = '/auth/login?redirect=' + encodeURIComponent(window.location.pathname);
                }
            } else {
                // 认证失败
                window.location.href = '/auth/login?redirect=' + encodeURIComponent(window.location.pathname);
            }
        } catch (error) {
            console.error('[PROFILE] 检查认证状态失败:', error);
            window.location.href = '/auth/login?redirect=' + encodeURIComponent(window.location.pathname);
        }
    }

    async function loadUserData() {
        try {
            window.logKeyStep('加载用户数据');

            // 加载用户统计信息
            await loadUserStats();

            // 填充个人信息
            fillProfileForm();

            // 填充偏好设置
            fillPreferencesForm();

            // 更新安全信息
            updateSecurityInfo();

            hideLoading();
        } catch (error) {
            console.error('[PROFILE] 加载用户数据失败:', error);
            window.logKeyStep('用户数据加载失败', error);
        }
    }

    async function loadUserStats() {
        try {
            window.logKeyStep('加载用户统计数据');

            // 从用户信息中获取统计
            const usage = currentUser?.usage || { total_analyzes: 0, monthly_analyzes: 0 };

            // 获取收藏数量
            const favoritesResponse = await fetch('/api/favorites?limit=1', {
                credentials: 'include'
            });
            let totalFavorites = 0;
            if (favoritesResponse.ok) {
                const favoritesData = await favoritesResponse.json();
                totalFavorites = favoritesData.data?.pagination?.total || 0;
            }

            // 获取最近活动
            const historyResponse = await fetch('/api/history?limit=5', {
                credentials: 'include'
            });
            let recentActivities = [];
            if (historyResponse.ok) {
                const historyData = await historyResponse.json();
                recentActivities =
                    historyData.data?.records?.map((record: any) => ({
                        type: 'analysis',
                        keyword: record.keyword,
                        timestamp: record.analysis_date
                    })) || [];
            }

            userStats = {
                totalAnalyses: usage.total_analyzes || 0,
                totalFavorites,
                monthlyAnalyses: usage.monthly_analyzes || 0,
                recentActivities
            };

            // 更新统计显示
            updateStatsDisplay();

            window.logKeyStep('用户统计加载完成', userStats);
        } catch (error) {
            console.error('[PROFILE] 加载统计数据失败:', error);
            // 使用默认值
            userStats = {
                totalAnalyses: 0,
                totalFavorites: 0,
                monthlyAnalyses: 0,
                recentActivities: []
            };
            updateStatsDisplay();
        }
    }

    function fillProfileForm() {
        if (!currentUser) return;

        const displayNameField = document.getElementById('display-name') as HTMLInputElement;
        const emailField = document.getElementById('email') as HTMLInputElement;
        const createdAtField = document.getElementById('created-at') as HTMLInputElement;
        const lastLoginField = document.getElementById('last-login') as HTMLInputElement;

        if (displayNameField) displayNameField.value = currentUser.displayName || '';
        if (emailField) emailField.value = currentUser.email || '';
        if (createdAtField) {
            const createdDate = new Date(currentUser.createdAt);
            createdAtField.value = createdDate.toLocaleString('zh-CN');
        }
        if (lastLoginField) lastLoginField.value = new Date().toLocaleString('zh-CN');
    }

    function fillPreferencesForm() {
        // 优先使用用户数据库中的偏好设置
        const userPreferences = currentUser?.preferences || {};
        // 合并localStorage中的设置
        const storedPreferences = getStoredPreferences();
        const preferences = { ...userPreferences, ...storedPreferences };

        const languageField = document.getElementById('language') as HTMLSelectElement;
        const themeField = document.getElementById('theme') as HTMLSelectElement;
        const analysisMode = document.getElementById('default-analysis-mode') as HTMLSelectElement;
        const showTrends = document.getElementById('show-trends') as HTMLInputElement;
        const showRelated = document.getElementById('show-related') as HTMLInputElement;
        const autoSave = document.getElementById('auto-save') as HTMLInputElement;

        if (languageField) languageField.value = preferences.language || 'zh-CN';
        if (themeField) themeField.value = preferences.theme || 'light';
        if (analysisMode) analysisMode.value = preferences.default_analysis_mode || preferences.defaultAnalysisMode || 'detailed';
        if (showTrends) showTrends.checked = preferences.showTrends !== false;
        if (showRelated) showRelated.checked = preferences.showRelated !== false;
        if (autoSave) autoSave.checked = preferences.autoSave !== false;
    }

    function updateStatsDisplay() {
        if (!userStats) return;

        const totalAnalyses = document.getElementById('total-analyses');
        const totalFavorites = document.getElementById('total-favorites');
        const monthlyAnalyses = document.getElementById('monthly-analyses');
        const recentActivities = document.getElementById('recent-activities');

        if (totalAnalyses) totalAnalyses.textContent = userStats.totalAnalyses.toString();
        if (totalFavorites) totalFavorites.textContent = userStats.totalFavorites.toString();
        if (monthlyAnalyses) monthlyAnalyses.textContent = userStats.monthlyAnalyses.toString();

        if (recentActivities && userStats.recentActivities) {
            recentActivities.innerHTML = userStats.recentActivities
                .map((activity: any) => {
                    const timeAgo = getTimeAgo(activity.timestamp);
                    const actionText = activity.type === 'analysis' ? '分析了关键词' : '收藏了关键词';
                    const iconClass = activity.type === 'analysis' ? 'text-primary-600' : 'text-accent-600';

                    return `
                    <div class="flex items-center space-x-3">
                        <div class="flex-shrink-0">
                            <div class="w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center">
                                <svg class="w-4 h-4 ${iconClass}" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    ${
                                        activity.type === 'analysis'
                                            ? '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>'
                                            : '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>'
                                    }
                                </svg>
                            </div>
                        </div>
                        <div class="flex-1">
                            <p class="text-sm text-gray-900">${actionText} "${activity.keyword}"</p>
                            <p class="text-xs text-gray-500">${timeAgo}</p>
                        </div>
                    </div>
                `;
                })
                .join('');
        }
    }

    function updateSecurityInfo() {
        const currentSessionTime = document.getElementById('current-session-time');
        if (currentSessionTime) {
            currentSessionTime.textContent = new Date().toLocaleString('zh-CN');
        }
    }

    function switchTab(tabName: string) {
        // 隐藏所有标签页
        document.querySelectorAll('.profile-tab').forEach((tab) => {
            tab.classList.add('hidden');
        });

        // 隐藏加载状态
        hideLoading();

        // 显示指定标签页
        const targetTab = document.getElementById(`${tabName}-tab`);
        targetTab?.classList.remove('hidden');

        window.logKeyStep('切换标签页', { tabName });
    }

    function hideLoading() {
        const loadingContent = document.getElementById('loading-content');
        loadingContent?.classList.add('hidden');
    }

    async function saveProfile() {
        try {
            const displayNameField = document.getElementById('display-name') as HTMLInputElement;
            const displayName = displayNameField.value.trim();

            if (!displayName) {
                if (window.utils) {
                    window.utils.showToast('请输入用户名', 'warning');
                }
                return;
            }

            window.logKeyStep('保存个人信息', { displayName });

            // 调用API更新用户信息
            const response = await fetch('/api/auth/me', {
                method: 'PUT',
                credentials: 'include',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    display_name: displayName
                })
            });

            const result = await response.json();

            if (result.success && result.user) {
                currentUser = result.user;

                if (window.utils) {
                    window.utils.showToast('个人信息保存成功', 'success');
                }
            } else {
                throw new Error(result.error || '保存失败');
            }
        } catch (error) {
            console.error('[PROFILE] 保存个人信息失败:', error);
            window.logKeyStep('个人信息保存失败', error);

            if (window.utils) {
                window.utils.showToast('保存失败: ' + (error as Error).message, 'error');
            }
        }
    }

    async function savePreferences() {
        try {
            const preferences = {
                language: (document.getElementById('language') as HTMLSelectElement).value,
                theme: (document.getElementById('theme') as HTMLSelectElement).value,
                default_analysis_mode: (document.getElementById('default-analysis-mode') as HTMLSelectElement).value,
                showTrends: (document.getElementById('show-trends') as HTMLInputElement).checked,
                showRelated: (document.getElementById('show-related') as HTMLInputElement).checked,
                autoSave: (document.getElementById('auto-save') as HTMLInputElement).checked
            };

            // 保存到localStorage
            localStorage.setItem('userPreferences', JSON.stringify(preferences));

            // 同时保存到数据库
            const response = await fetch('/api/auth/me', {
                method: 'PUT',
                credentials: 'include',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    preferences
                })
            });

            const result = await response.json();

            if (result.success) {
                window.logKeyStep('保存偏好设置', preferences);

                if (window.utils) {
                    window.utils.showToast('偏好设置保存成功', 'success');
                }
            } else {
                throw new Error(result.error || '保存失败');
            }
        } catch (error) {
            console.error('[PROFILE] 保存偏好设置失败:', error);
            window.logKeyStep('偏好设置保存失败', error);

            if (window.utils) {
                window.utils.showToast('保存失败: ' + (error as Error).message, 'error');
            }
        }
    }

    function resetPreferences() {
        const confirmed = confirm('确定要重置所有偏好设置为默认值吗？');
        if (!confirmed) return;

        try {
            // 清除localStorage中的偏好设置
            localStorage.removeItem('userPreferences');

            // 重新填充表单
            fillPreferencesForm();

            window.logKeyStep('重置偏好设置');

            if (window.utils) {
                window.utils.showToast('偏好设置已重置为默认值', 'success');
            }
        } catch (error) {
            console.error('[PROFILE] 重置偏好设置失败:', error);

            if (window.utils) {
                window.utils.showToast('重置失败，请重试', 'error');
            }
        }
    }

    async function changePassword() {
        try {
            const currentPassword = (document.getElementById('current-password') as HTMLInputElement).value;
            const newPassword = (document.getElementById('new-password') as HTMLInputElement).value;
            const confirmPassword = (document.getElementById('confirm-password') as HTMLInputElement).value;

            if (!currentPassword || !newPassword || !confirmPassword) {
                if (window.utils) {
                    window.utils.showToast('请填写所有密码字段', 'warning');
                }
                return;
            }

            if (newPassword.length < 6) {
                if (window.utils) {
                    window.utils.showToast('新密码长度至少为6位', 'warning');
                }
                return;
            }

            if (newPassword !== confirmPassword) {
                if (window.utils) {
                    window.utils.showToast('新密码和确认密码不一致', 'warning');
                }
                return;
            }

            window.logKeyStep('修改密码');

            // 调用API修改密码
            const response = await fetch('/api/auth/change-password', {
                method: 'POST',
                credentials: 'include',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    currentPassword,
                    newPassword
                })
            });

            const result = await response.json();

            if (result.success) {
                // 清空表单
                (document.getElementById('password-form') as HTMLFormElement).reset();

                if (window.utils) {
                    window.utils.showToast('密码修改成功', 'success');
                }
            } else {
                throw new Error(result.error || '密码修改失败');
            }
        } catch (error) {
            console.error('[PROFILE] 修改密码失败:', error);
            window.logKeyStep('密码修改失败', error);

            if (window.utils) {
                window.utils.showToast('修改失败: ' + (error as Error).message, 'error');
            }
        }
    }

    function deleteAccount() {
        const confirmed = confirm('确定要注销账户吗？这将永久删除您的所有数据，且不可恢复。\n\n请输入 "DELETE" 确认操作：');
        if (confirmed && prompt('请输入 "DELETE" 确认注销账户：') === 'DELETE') {
            window.logKeyStep('用户确认账户注销');

            // TODO: 实际项目中应该调用API注销账户
            if (window.utils) {
                window.utils.showToast('账户注销功能暂未开放', 'info');
            }
        }
    }

    function getStoredPreferences() {
        try {
            const stored = localStorage.getItem('userPreferences');
            return stored ? JSON.parse(stored) : {};
        } catch (error) {
            console.error('[PROFILE] 读取偏好设置失败:', error);
            return {};
        }
    }

    function getTimeAgo(timestamp: string): string {
        const now = new Date();
        const time = new Date(timestamp);
        const diff = now.getTime() - time.getTime();

        const minutes = Math.floor(diff / (1000 * 60));
        const hours = Math.floor(diff / (1000 * 60 * 60));
        const days = Math.floor(diff / (1000 * 60 * 60 * 24));

        if (minutes < 60) {
            return `${minutes}分钟前`;
        } else if (hours < 24) {
            return `${hours}小时前`;
        } else {
            return `${days}天前`;
        }
    }
</script>

<style>
    /* 个人中心页面样式 */
    .profile-nav-item {
        transition: all 0.2s ease;
    }

    .profile-nav-item:hover {
        background-color: #f8fafc;
    }

    .profile-nav-item.active {
        background-color: #dbeafe;
        color: #2563eb;
    }

    /* 标签页切换动画 */
    .profile-tab {
        animation: fadeIn 0.3s ease-out;
    }

    @keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* 表单样式增强 */
    .form-input:focus,
    .form-select:focus,
    .form-textarea:focus {
        box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
    }

    /* 统计卡片悬停效果 */
    .bg-white:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        transition: all 0.2s ease;
    }

    /* 响应式调整 */
    @media (max-width: 1024px) {
        .lg\\:col-span-1,
        .lg\\:col-span-3 {
            grid-column: span 1 / span 1;
        }
    }
</style>
